<?php declare( strict_types=1 );

namespace FernleafSystems\Wordpress\Plugin\Shield\Scans\Afs\Scans;

use FernleafSystems\Wordpress\Plugin\Shield\Scans\Afs\Exceptions;
use FernleafSystems\Wordpress\Plugin\Shield\Scans\Afs\ScanActionVO;
use FernleafSystems\Wordpress\Services\Utilities\File\LocateStrInFile;

class MalwareFile extends BaseScan {

	/**
	 * @var LocateStrInFile
	 */
	private $locator;

	/**
	 * @throws Exceptions\MalwareFileException
	 * @throws \InvalidArgumentException
	 */
	public function scan() :bool {
		/** @var ScanActionVO $action */
		$action = $this->getScanActionVO();

		if ( $this->isSupportedFileExt() ) {

			$this->locator = ( new LocateStrInFile() )->setPath( $this->pathFull );

			// Simple Patterns first
			$this->locator->setIsRegEx( false );
			foreach ( $action->patterns_simple as $signature ) {
				$this->scanForSig( $signature );
			}

			// RegEx Patterns
			$this->locator->setIsRegEx( true );
			if ( empty( $action->patterns_fullregex ) ) {
				foreach ( $action->patterns_regex as $signature ) {
					$this->scanForSig( $signature );
				}
			}
			else { // Full regex patterns
				foreach ( $action->patterns_fullregex as $signature ) {
					$this->scanForSig( $signature );
				}
			}
		}

		return true;
	}

	/**
	 * @throws Exceptions\MalwareFileException
	 */
	private function scanForSig( string $signature ) {
		$lines = $this->locator->setNeedle( $signature )->run();
		if ( !empty( $lines ) ) {
			throw new Exceptions\MalwareFileException(
				$this->pathFull,
				[
					// Set FP Confidence for file and lines to ZERO.
					'mal_fp_confidence' => 0,
					'mal_fp_lines'      => array_fill_keys( array_keys( $lines ), 0 ),
					'mal_file_lines'    => $lines,
					'mal_sig'           => $signature,
				]
			);
		}
	}

	protected function getSupportedFileExtensions() :array {
		return [ 'php', 'php5', 'php7' ];
	}
}