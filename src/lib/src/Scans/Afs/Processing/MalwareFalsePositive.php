<?php declare( strict_types=1 );

namespace FernleafSystems\Wordpress\Plugin\Shield\Scans\Afs\Processing;

use FernleafSystems\Wordpress\Plugin\Shield;
use FernleafSystems\Wordpress\Plugin\Shield\Scans\Afs\{
	ResultItem,
	ScanActionVO
};
use FernleafSystems\Wordpress\Plugin\Shield\Modules\HackGuard\Lib;

class MalwareFalsePositive {

	use Shield\Modules\ModConsumer;
	use Shield\Scans\Common\ScanActionConsumer;

	public function run( ResultItem $item ) {
		/** @var ScanActionVO $action */
		$action = $this->getScanActionVO();

		// It's a "valid" file from previous scans so we know it's 100% false positive.
		if ( $item->mal_fp_confidence === 100 ) {
			$reporter = ( new MalFalsePositiveReporter() )
				->setMod( $this->getMod() );
			foreach ( $item->mal_file_lines as $line ) {
				$reporter->reportLine( $item->path_full, $line, true );
			}
			$reporter->reportPath( $item->path_full, true );
		}
		elseif ( $action->confidence_threshold > 0 ) {

			// 1. First check whether the FP of the whole file means we can filter it
			$fpConfidence = ( new MalFalsePositiveQuery() )
				->setMod( $this->getMod() )
				->queryPath( $item->path_full );

			// 2. Check each line and filter out fp confident lines
			if ( $fpConfidence < $action->confidence_threshold ) {
				$item->mal_fp_lines = ( new MalFalsePositiveQuery() )
					->setMod( $this->getMod() )
					->queryFileLines( $item->path_full, array_keys( $item->mal_file_lines ) );

				$filteredLines = array_filter(
					$item->mal_fp_lines,
					function ( $score ) use ( $action ) {
						return $score < $action->confidence_threshold;
					}
				);

				if ( empty( $filteredLines ) ) {
					// Now send False Positive report for entire file based on all file lines being FPs.
					( new MalFalsePositiveReporter() )
						->setMod( $this->getMod() )
						->reportPath( $item->path_full, true );
				}
			}
		}
	}
}