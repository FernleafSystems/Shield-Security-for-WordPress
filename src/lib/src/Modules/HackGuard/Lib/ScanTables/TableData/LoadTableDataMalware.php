<?php declare( strict_types=1 );

namespace FernleafSystems\Wordpress\Plugin\Shield\Modules\HackGuard\Lib\ScanTables\TableData;

use FernleafSystems\Wordpress\Plugin\Shield\Modules\HackGuard\Scan\Results\Retrieve\RetrieveItems;
use FernleafSystems\Wordpress\Plugin\Shield\Scans;
use FernleafSystems\Wordpress\Services\Services;

class LoadTableDataMalware extends BaseLoadTableData {

	public function run() :array {
		$RS = $this->getRecordRetriever()->retrieveForResultsTables();
		try {
			$files = array_map(
				function ( $item ) {
					/** @var Scans\Afs\ResultItem $item */
					$data = $item->getRawData();

					$data[ 'rid' ] = $item->VO->scanresult_id;
					$data[ 'file' ] = $item->path_fragment;
					$data[ 'created_at' ] = $item->VO->created_at;
					$data[ 'detected_since' ] = Services::Request()
														->carbon( true )
														->setTimestamp( $item->VO->created_at )
														->diffForHumans();

					$data[ 'file_as_href' ] = $this->getColumnContent_File( $item );

					$data[ 'status_slug' ] = 'malware';
					$data[ 'status' ] = $this->getColumnContent_FileStatus( $item, __( 'Malware', 'wp-simple-firewall' ) );

					$data[ 'line_numbers' ] = implode( ', ', array_map(
						function ( $line ) {
							return $line + 1;  // because lines start at ZERO
						},
						array_keys( $item->mal_fp_lines )
					) );
					$data[ 'mal_sig' ] = sprintf( '<code style="white-space: nowrap">%s</code>', esc_html( $item->mal_sig ) );
					$data[ 'file_type' ] = strtoupper( Services::Data()->getExtension( $item->path_full ) );
					$data[ 'actions' ] = implode( ' ', $this->getActions( $data[ 'status_slug' ], $item ) );
					$data[ 'mal_details' ] = $this->getColumnContent_MalwareDetails(
						$data[ 'line_numbers' ],
						(int)$item->mal_fp_confidence,
						$data[ 'mal_sig' ]
					);

					return $data;
				},
				$RS->getMalware()->getItems()
			);
		}
		catch ( \Exception $e ) {
			$files = [];
		}

		return $files;
	}

	protected function getColumnContent_MalwareDetails( string $lines, int $confidence, string $sig ) :string {
		return sprintf( '<ul style="list-style: square inside"><li>%s</li></ul>',
			implode( '</li><li>', [
				sprintf( '%s: %s', __( 'Line Numbers' ), $lines ),
				sprintf( '%s: %s', __( 'False Positive Confidence' ), $confidence ),
				sprintf( '%s: %s', __( 'Pattern Detected' ), $sig ),
			] )
		);
	}

	protected function getRecordRetriever() :RetrieveItems {
		$ret = parent::getRecordRetriever();
		return $ret->addWheres( [
			sprintf( "%s.`meta_key`='is_mal'", $ret::ABBR_RESULTITEMMETA ),
			sprintf( "%s.`meta_value`=1", $ret::ABBR_RESULTITEMMETA ),
		] );
	}
}