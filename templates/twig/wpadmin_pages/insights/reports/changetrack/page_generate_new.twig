<form id="ChangeTrackingReportForm">
	<div class="row">
		<div class="col-md-12 col-lg-10 col-xl-8">
			<h6 class="mt-2 mb-3">
				Select What To Report And When
			</h6>
			<div class="mb-3">
				{% for zone_key,zone_name in vars.available_zones %}
					<div class="form-check form-check-inline">
						<input class="form-check-input" type="checkbox" name="zones[]" id="zone-{{ zone_key }}"
						       value="{{ zone_key }}" checked="checked" />
						<label class="form-check-label" for="zone-{{ zone_key }}">{{ zone_name }}</label>
					</div>
				{% endfor %}
			</div>
			<div class="input-group mb-3 date input-daterange" id="DateRangePicker">
			  <input type="text" name="start_date" class="form-control datepicker-input"
			         {% if not flags.can_run_report %}disabled="disabled"{% endif %}
			         placeholder="Start Date" />
			  <span class="input-group-text">to</span>
			  <input type="text" name="end_date" class="form-control datepicker-input"
			         {% if not flags.can_run_report %}disabled="disabled"{% endif %}
			         placeholder="End Date" />

			  <button type="submit" class=" btn btn-primary"
			          {% if not flags.can_run_report %}disabled="disabled"{% endif %}>
				  {% if flags.can_run_report %}{{ strings.build_change_report }}{% else %}Unavailable{% endif %}
			  </button>
			</div>
		</div>
	</div>
</form>

<hr class="my-4" />

<div id="ChangeTrackingReport"></div>

{% block inline_scripts %}

	{% if flags.can_run_report %}
		<script type="text/javascript">
		  new DateRangePicker( document.getElementById( 'DateRangePicker' ), {
		  format: 'yyyy-mm-dd',
		  minDate: new Date( '{{ vars.earliest_date }}' ),
		  maxDate: new Date( '{{ vars.latest_date }}' ),
		  weekStart: 1,
	  } );

	  (function ( $ ) {
		  $( document ).ready( function () {

			  jQuery( document ).on( "click", 'input[name=change_report_type]', function ( evt ) {

				  let $radio = $( this );
				  if ( $radio.val() === 'detailed' ) {
					  $( '#ChangeTrackingReport div.detailed.d-none' ).removeClass( 'd-none' );
				  }
				  else {
					  $( '#ChangeTrackingReport div.detailed' ).addClass( 'd-none' );
				  }
				  return true;
			  } );

			  let requestRunning = false;

			  jQuery( document ).on( "submit", 'form#ChangeTrackingReportForm', function ( evt ) {
				  evt.preventDefault();
				  if ( requestRunning ) {
					  return false;
				  }

				  let $form = $( this );

				  const startDate = jQuery( 'input[name=start_date]', $form ).val();
				  const endDate = jQuery( 'input[name=end_date]', $form ).val();
				  if ( startDate.length === 0 ) {
					  alert( 'Please provide a start date' );
				  }
				  else if ( endDate.length === 0 ) {
					  alert( 'Please provide an end date' );
				  }
				  else {
					  requestRunning = true;

					  Shield_AjaxRender
					  .send_ajax_req( {
						  render_slug: '{{ ajax.build_change_report_slug }}',
						  form_params: $form.serialize()
					  } )
					  .then( ( response ) => {
						  if ( response.success ) {
							  jQuery( '#ChangeTrackingReport' ).html( response.data.html );
						  }
						  else {
							  alert( response.data.error );
						  }
					  } )
					  .catch( ( error ) => {
						  console.log( error );
					  } )
					  .finally( ( response ) => {
						  iCWP_WPSF_BodyOverlay.hide();
						  requestRunning = false;
					  } );

				  }

				  return false;
			  } );
		  } );
	  })( jQuery );

	</script>
	{% endif %}
{% endblock %}