{
  "slug":        "data",
  "properties":  {
    "slug":                  "data",
    "load_priority":         2,
    "name":                  "Data",
    "show_module_menu_item": false,
    "auto_enabled":          true,
    "storage_key":           "data",
    "show_central":          false,
    "premium":               false,
    "access_restricted":     true,
    "run_if_whitelisted":    true,
    "run_if_wpcli":          true
  },
  "wpcli":       {
    "enabled": false
  },
  "sections":    [
  ],
  "options":     [
  ],
  "definitions": {
    "db_handler_classes":        {
      "snapshots":        "\\FernleafSystems\\Wordpress\\Plugin\\Shield\\Modules\\AuditTrail\\DB\\Snapshots\\Ops\\Handler",
      "at_logs":          "\\FernleafSystems\\Wordpress\\Plugin\\Shield\\Modules\\AuditTrail\\DB\\Logs\\Ops\\Handler",
      "at_meta":          "\\FernleafSystems\\Wordpress\\Plugin\\Shield\\Modules\\AuditTrail\\DB\\Meta\\Ops\\Handler",
      "ips":              "\\FernleafSystems\\Wordpress\\Plugin\\Shield\\Modules\\Data\\DB\\IPs\\Ops\\Handler",
      "ip_meta":          "\\FernleafSystems\\Wordpress\\Plugin\\Shield\\Modules\\Data\\DB\\IpMeta\\Ops\\Handler",
      "req_logs":         "\\FernleafSystems\\Wordpress\\Plugin\\Shield\\Modules\\Data\\DB\\ReqLogs\\Ops\\Handler",
      "user_meta":        "\\FernleafSystems\\Wordpress\\Plugin\\Shield\\Modules\\Data\\DB\\UserMeta\\Ops\\Handler",
      "rules":            "\\FernleafSystems\\Wordpress\\Plugin\\Shield\\Modules\\Data\\DB\\Rules\\Ops\\Handler",
      "event":            "\\FernleafSystems\\Wordpress\\Plugin\\Shield\\Modules\\Events\\DB\\Event\\Ops\\Handler",
      "file_locker":      "\\FernleafSystems\\Wordpress\\Plugin\\Shield\\Modules\\HackGuard\\DB\\FileLocker\\Ops\\Handler",
      "scans":            "\\FernleafSystems\\Wordpress\\Plugin\\Shield\\Modules\\HackGuard\\DB\\Scans\\Ops\\Handler",
      "scanitems":        "\\FernleafSystems\\Wordpress\\Plugin\\Shield\\Modules\\HackGuard\\DB\\ScanItems\\Ops\\Handler",
      "resultitems":      "\\FernleafSystems\\Wordpress\\Plugin\\Shield\\Modules\\HackGuard\\DB\\ResultItems\\Ops\\Handler",
      "resultitem_meta":  "\\FernleafSystems\\Wordpress\\Plugin\\Shield\\Modules\\HackGuard\\DB\\ResultItemMeta\\Ops\\Handler",
      "scanresults":      "\\FernleafSystems\\Wordpress\\Plugin\\Shield\\Modules\\HackGuard\\DB\\ScanResults\\Ops\\Handler",
      "malware":          "\\FernleafSystems\\Wordpress\\Plugin\\Shield\\Modules\\HackGuard\\DB\\Malware\\Ops\\Handler",
      "botsignal":        "\\FernleafSystems\\Wordpress\\Plugin\\Shield\\Modules\\IPs\\DB\\BotSignal\\Ops\\Handler",
      "ip_rules":         "\\FernleafSystems\\Wordpress\\Plugin\\Shield\\Modules\\IPs\\DB\\IpRules\\Ops\\Handler",
      "crowdsec_signals": "\\FernleafSystems\\Wordpress\\Plugin\\Shield\\Modules\\IPs\\DB\\CrowdSecSignals\\Ops\\Handler",
      "mfa":              "\\FernleafSystems\\Wordpress\\Plugin\\Shield\\Modules\\LoginGuard\\DB\\Mfa\\Ops\\Handler",
      "reports":          "\\FernleafSystems\\Wordpress\\Plugin\\Shield\\Modules\\Plugin\\DB\\Reports\\Ops\\Handler"
    },
    "db_table_mfa":              {
      "name":            "MFA",
      "slug":            "mfa",
      "autoexpire":      0,
      "has_updated_at":  true,
      "has_deleted_at":  true,
      "col_older_than":  "created_at",
      "cols_custom":     {
        "user_id":      {
          "macro_type": "unsigned_int",
          "type":       "bigint",
          "length":     11
        },
        "slug":         {
          "macro_type": "varchar",
          "length":     10,
          "comment":    "Factor Slug"
        },
        "unique_id":    {
          "macro_type": "varchar",
          "length":     256,
          "comment":    "Unique Identifier"
        },
        "label":        {
          "macro_type": "varchar",
          "length":     64,
          "comment":    "Label"
        },
        "data":         {
          "macro_type": "meta",
          "comment":    "Data"
        },
        "passwordless": {
          "macro_type": "bool",
          "default":    0,
          "comment":    "Can be used passwordless"
        }
      },
      "cols_timestamps": {
        "used_at":    {
          "comment": "Used At"
        },
        "created_at": {
          "comment": "Registered At"
        }
      }
    },
    "db_table_event":            {
      "name":           "Shield Events & Stats",
      "autoexpire":     0,
      "slug":           "event",
      "has_updated_at": false,
      "has_deleted_at": false,
      "col_older_than": "created_at",
      "cols_custom":    {
        "event": {
          "macro_type": "varchar",
          "length":     50
        },
        "count": {
          "macro_type": "unsigned_int",
          "length":     11,
          "default":    0,
          "comment":    "Total"
        }
      }
    },
    "db_table_snapshots":        {
      "name":           "Site Snapshots",
      "autoexpire":     0,
      "slug":           "snapshots",
      "has_updated_at": false,
      "has_deleted_at": false,
      "col_older_than": "created_at",
      "cols_custom":    {
        "slug": {
          "macro_type": "varchar",
          "length":     10,
          "comment":    "Snapshot Slug"
        },
        "data": {
          "macro_type": "mediumtext",
          "comment":    "Snapshot"
        }
      }
    },
    "db_table_at_logs":          {
      "name":           "Activity Logs",
      "slug":           "at_logs",
      "has_updated_at": true,
      "has_created_at": true,
      "has_deleted_at": false,
      "cols_custom":    {
        "req_ref":    {
          "macro_type":  "foreign_key_id",
          "foreign_key": {
            "ref_table": "icwp_wpsf_req_logs"
          }
        },
        "site_id":    {
          "macro_type": "unsigned_int",
          "default":    1,
          "comment":    "Site ID"
        },
        "event_slug": {
          "macro_type": "varchar",
          "comment":    "Event Slug"
        }
      }
    },
    "db_table_at_meta":          {
      "name":           "Activity Log Meta Data",
      "slug":           "at_meta",
      "has_updated_at": false,
      "has_created_at": false,
      "has_deleted_at": false,
      "cols_custom":    {
        "log_ref":    {
          "macro_type":  "foreign_key_id",
          "foreign_key": {
            "ref_table": "icwp_wpsf_at_logs"
          },
          "comment":     "Reference to primary log entry"
        },
        "meta_key":   {
          "macro_type": "varchar",
          "length":     32,
          "comment":    "Meta Key"
        },
        "meta_value": {
          "macro_type": "text",
          "comment":    "Meta Data"
        }
      }
    },
    "db_table_ips":              {
      "name":           "IP Addresses",
      "autoexpire":     0,
      "slug":           "ips",
      "has_updated_at": false,
      "has_deleted_at": false,
      "col_older_than": "created_at",
      "cols_custom":    {
        "ip": {
          "macro_type": "ip",
          "attr":       [
            "UNIQUE"
          ]
        }
      }
    },
    "db_table_ip_meta":          {
      "name":            "IP Meta",
      "autoexpire":      0,
      "slug":            "ip_meta",
      "has_updated_at":  true,
      "col_older_than":  "updated_at",
      "cols_custom":     {
        "ip_ref":       {
          "macro_type":  "foreign_key_id",
          "foreign_key": {
            "ref_table": "icwp_wpsf_ips"
          }
        },
        "asn":          {
          "macro_type": "unsigned_int",
          "length":     10,
          "comment":    "ASN"
        },
        "country_iso2": {
          "macro_type": "char",
          "length":     2,
          "comment":    "Country Code ISO 3166-1 alpha-2"
        },
        "pc_is_proxy":  {
          "macro_type": "bool",
          "default":    0,
          "comment":    "ProxyCheck: Is Proxy?"
        }
      },
      "cols_timestamps": {
        "geo_updated_at":   {
          "comment": "Geolocation data updated at"
        },
        "pc_last_check_at": {
          "comment": "ProxyCheck last lookup at"
        }
      }
    },
    "db_table_req_logs":         {
      "name":           "Request Logs",
      "slug":           "req_logs",
      "autoexpire":     0,
      "has_updated_at": false,
      "has_deleted_at": false,
      "cols_custom":    {
        "req_id":    {
          "macro_type": "varchar",
          "length":     10,
          "attr":       [
            "UNIQUE"
          ]
        },
        "ip_ref":    {
          "macro_type":  "foreign_key_id",
          "foreign_key": {
            "ref_table": "icwp_wpsf_ips"
          }
        },
        "type":      {
          "macro_type": "char",
          "length":     1,
          "comment":    "Type of requests"
        },
        "verb":      {
          "macro_type": "varchar",
          "length":     8,
          "comment":    "Request Verb"
        },
        "path":      {
          "macro_type": "varchar",
          "length":     512,
          "comment":    "Request Path"
        },
        "code":      {
          "macro_type": "unsigned_int",
          "type":       "smallint",
          "length":     3,
          "default":    0,
          "comment":    "Response Code"
        },
        "uid":       {
          "macro_type": "bigint",
          "comment":    "User ID",
          "no_length":  true
        },
        "offense":   {
          "macro_type": "bool",
          "default":    0,
          "comment":    "Was Offense"
        },
        "transient": {
          "macro_type": "bool",
          "default":    0,
          "comment":    "Temporary Log"
        },
        "meta":      {
          "macro_type": "meta"
        }
      }
    },
    "db_table_rules":            {
      "name":           "Rules",
      "autoexpire":     0,
      "slug":           "rules",
      "has_updated_at": true,
      "has_deleted_at": false,
      "col_older_than": "updated_at",
      "cols_custom":    {
        "uuid":             {
          "macro_type": "uuid4"
        },
        "slug":             {
          "macro_type": "varchar",
          "length":     128
        },
        "name":             {
          "macro_type": "varchar",
          "length":     128
        },
        "description":      {
          "macro_type": "varchar",
          "length":     256
        },
        "type":             {
          "macro_type": "char",
          "length":     1
        },
        "exec_order":       {
          "macro_type": "unsigned_int",
          "type":       "smallint",
          "length":     5,
          "default":    0,
          "comment":    "Execution Order"
        },
        "is_active":        {
          "macro_type": "bool",
          "default":    0,
          "comment":    "Is rule active?"
        },
        "is_apply_default": {
          "macro_type": "bool",
          "default":    1,
          "comment":    "Automatically apply default conditions"
        },
        "can_export":       {
          "macro_type": "bool",
          "default":    0,
          "comment":    "Can rule be included in site-to-site export"
        },
        "user_id":          {
          "macro_type": "unsigned_int",
          "type":       "bigint",
          "length":     11,
          "default":    0,
          "comment":    "Author (User) ID for custom rules"
        },
        "builder_version":  {
          "macro_type": "varchar",
          "length":     10
        },
        "rule_as_json":     {
          "macro_type": "meta",
          "comment":    "Rule as JSON"
        },
        "form":             {
          "macro_type": "meta",
          "comment":    "Form Data"
        },
        "form_draft":       {
          "macro_type": "meta",
          "comment":    "Draft Form Data"
        }
      }
    },
    "db_table_malware":          {
      "name":            "Malware File Tracking",
      "autoexpire":      0,
      "slug":            "malware",
      "has_updated_at":  true,
      "has_deleted_at":  false,
      "col_older_than":  "updated_at",
      "cols_custom":     {
        "hash_sha256":   {
          "macro_type": "sha256",
          "comment":    "Item hash SHA256"
        },
        "file_path":     {
          "macro_type": "varchar",
          "length":     256,
          "comment":    "The relative path of the malware-containing file."
        },
        "code_type":     {
          "macro_type": "char",
          "length":     5,
          "default":    "php",
          "comment":    "The language"
        },
        "sig":           {
          "macro_type": "varchar",
          "length":     128,
          "comment":    "The malware signature pattern that triggered the discovery"
        },
        "is_valid_file": {
          "macro_type": "bool",
          "comment":    "Is the file validated locally"
        },
        "malai_status":  {
          "macro_type": "varchar",
          "length":     20,
          "default":    "''",
          "comment":    "The status of the file from malai"
        },
        "file_content":  {
          "macro_type": "text",
          "type":       "mediumtext",
          "comment":    "The actual file content"
        }
      },
      "cols_timestamps": {
        "last_seen_at":         {
          "comment": "Last Seen In Scan"
        },
        "last_malai_status_at": {
          "comment": "Last Check With Malai For Status"
        },
        "reported_at":          {
          "comment": "Last Reported"
        }
      }
    },
    "db_table_file_locker":      {
      "name":            "File Locker Data",
      "autoexpire":      0,
      "slug":            "file_locker",
      "col_older_than":  "created_at",
      "has_updated_at":  true,
      "cols_custom":     {
        "type":          {
          "macro_type": "varchar",
          "length":     20,
          "comment":    "The type of file being locked"
        },
        "path":          {
          "macro_type": "varchar",
          "length":     256,
          "comment":    "Full Path to file"
        },
        "hash_original": {
          "macro_type": "varchar",
          "length":     40,
          "comment":    "SHA1 File Hash Original"
        },
        "hash_current":  {
          "macro_type": "varchar",
          "length":     40,
          "comment":    "SHA1 File Hash Current"
        },
        "public_key_id": {
          "type":    "tinyint",
          "length":  2,
          "comment": "Public Key ID"
        },
        "cipher":        {
          "macro_type": "varchar",
          "length":     32,
          "default":    "''",
          "comment":    "OpenSSL Cipher"
        },
        "content":       {
          "type":    "mediumblob",
          "comment": "Encrypted Content"
        }
      },
      "cols_timestamps": {
        "detected_at": {
          "comment": "Change Last Detected"
        },
        "reverted_at": {
          "comment": "Reverted To Backup"
        },
        "notified_at": {
          "comment": "Notification Sent"
        }
      }
    },
    "db_table_scans":            {
      "name":           "Scans",
      "autoexpire":     0,
      "slug":           "scans",
      "col_older_than": "created_at",
      "has_updated_at": false,
      "cols_custom":    {
        "scan":        {
          "macro_type": "char",
          "length":     3,
          "comment":    "Scan Slug"
        },
        "ready_at":    {
          "macro_type": "timestamp",
          "comment":    "Scan Ready At"
        },
        "finished_at": {
          "macro_type": "timestamp",
          "comment":    "Scan Completed At"
        },
        "meta":        {
          "macro_type": "meta",
          "comment":    "Scan Meta Info"
        }
      }
    },
    "db_table_scanitems":        {
      "name":           "Scan Items",
      "autoexpire":     0,
      "slug":           "scanitems",
      "has_updated_at": false,
      "has_created_at": false,
      "has_deleted_at": false,
      "col_older_than": "started_at",
      "cols_custom":    {
        "scan_ref":    {
          "macro_type":  "foreign_key_id",
          "foreign_key": {
            "ref_table": "icwp_wpsf_scans"
          }
        },
        "items":       {
          "macro_type": "text",
          "comment":    "Array of scan items"
        },
        "started_at":  {
          "macro_type": "timestamp",
          "comment":    "Started Scanning Items At"
        },
        "finished_at": {
          "macro_type": "timestamp",
          "comment":    "Finished Scanning Items At"
        }
      }
    },
    "db_table_resultitems":      {
      "name":           "Scan Result Items",
      "autoexpire":     0,
      "slug":           "resultitems",
      "has_updated_at": true,
      "col_older_than": "updated_at",
      "cols_custom":    {
        "item_type":         {
          "macro_type": "char",
          "length":     1,
          "comment":    "Result Item Type"
        },
        "item_id":           {
          "macro_type": "varchar",
          "length":     256,
          "comment":    "Result Item ID"
        },
        "ignored_at":        {
          "macro_type": "timestamp",
          "comment":    "Result Ignored"
        },
        "notified_at":       {
          "macro_type": "timestamp",
          "comment":    "Result Notification Sent"
        },
        "auto_filtered_at":  {
          "macro_type": "timestamp",
          "comment":    "Result Auto Filtered"
        },
        "attempt_repair_at": {
          "macro_type": "timestamp",
          "comment":    "Attempted Repair At"
        },
        "item_repaired_at":  {
          "macro_type": "timestamp",
          "comment":    "Item Repaired At"
        },
        "item_deleted_at":   {
          "macro_type": "timestamp",
          "comment":    "Item Deleted At"
        }
      }
    },
    "db_table_resultitem_meta":  {
      "name":           "Scan Result Items Metadata",
      "slug":           "resultitem_meta",
      "has_updated_at": false,
      "has_created_at": false,
      "has_deleted_at": false,
      "cols_custom":    {
        "ri_ref":     {
          "macro_type":  "foreign_key_id",
          "foreign_key": {
            "ref_table": "icwp_wpsf_resultitems"
          },
          "comment":     "Reference to primary Result Item record"
        },
        "meta_key":   {
          "macro_type": "varchar",
          "length":     32,
          "comment":    "Meta Key"
        },
        "meta_value": {
          "macro_type": "text",
          "comment":    "Meta Data"
        }
      }
    },
    "db_table_scanresults":      {
      "name":           "Scan Result Sets",
      "autoexpire":     0,
      "slug":           "scanresults",
      "has_updated_at": false,
      "has_created_at": true,
      "has_deleted_at": false,
      "cols_custom":    {
        "scan_ref":       {
          "macro_type":  "foreign_key_id",
          "foreign_key": {
            "ref_table": "icwp_wpsf_scans"
          }
        },
        "resultitem_ref": {
          "macro_type":  "foreign_key_id",
          "foreign_key": {
            "ref_table": "icwp_wpsf_resultitems"
          }
        }
      }
    },
    "db_table_botsignal":        {
      "name":           "Bot Signals Tracking",
      "autoexpire":     0,
      "slug":           "botsignal",
      "has_updated_at": true,
      "col_older_than": "updated_at",
      "cols_custom":    {
        "ip_ref":             {
          "macro_type":  "foreign_key_id",
          "foreign_key": {
            "ref_table": "icwp_wpsf_ips"
          }
        },
        "notbot_at":          {
          "macro_type": "timestamp",
          "comment":    "NotBot"
        },
        "frontpage_at":       {
          "macro_type": "timestamp",
          "comment":    "Any Frontend Page Loaded"
        },
        "loginpage_at":       {
          "macro_type": "timestamp",
          "comment":    "Login Page Loaded"
        },
        "bt404_at":           {
          "macro_type": "timestamp",
          "comment":    "BotTrack 404"
        },
        "btfake_at":          {
          "macro_type": "timestamp",
          "comment":    "BotTrack FakeWebCrawler"
        },
        "btcheese_at":        {
          "macro_type": "timestamp",
          "comment":    "BotTrack LinkCheese"
        },
        "btloginfail_at":     {
          "macro_type": "timestamp",
          "comment":    "BotTrack LoginFailed"
        },
        "btua_at":            {
          "macro_type": "timestamp",
          "comment":    "BotTrack Useragent Fail"
        },
        "btxml_at":           {
          "macro_type": "timestamp",
          "comment":    "BotTrack XMLRPC Access"
        },
        "btlogininvalid_at":  {
          "macro_type": "timestamp",
          "comment":    "BotTrack LoginInvalid"
        },
        "btinvalidscript_at": {
          "macro_type": "timestamp",
          "comment":    "BotTrack InvalidScript"
        },
        "btauthorfishing_at": {
          "macro_type": "timestamp",
          "comment":    "BotTrack Author Username Fishing"
        },
        "cooldown_at":        {
          "macro_type": "timestamp",
          "comment":    "Cooldown Triggered"
        },
        "humanspam_at":       {
          "macro_type": "timestamp",
          "comment":    "Comment Marked As Human SPAM"
        },
        "markspam_at":        {
          "macro_type": "timestamp",
          "comment":    "Mark Comment As SPAM"
        },
        "unmarkspam_at":      {
          "macro_type": "timestamp",
          "comment":    "Unmark Comment As SPAM"
        },
        "captchapass_at":     {
          "macro_type": "timestamp",
          "comment":    "Captcha Passed"
        },
        "captchafail_at":     {
          "macro_type": "timestamp",
          "comment":    "Captcha Failed"
        },
        "auth_at":            {
          "macro_type": "timestamp",
          "comment":    "Successful Login"
        },
        "firewall_at":        {
          "macro_type": "timestamp",
          "comment":    "Triggered Firewall"
        },
        "ratelimit_at":       {
          "macro_type": "timestamp",
          "comment":    "Rate Limit Exceeded"
        },
        "offense_at":         {
          "macro_type": "timestamp",
          "comment":    "Last Offense"
        },
        "blocked_at":         {
          "macro_type": "timestamp",
          "comment":    "Last Block"
        },
        "unblocked_at":       {
          "macro_type": "timestamp",
          "comment":    "Unblocked"
        },
        "bypass_at":          {
          "macro_type": "timestamp",
          "comment":    "Bypass"
        },
        "snsent_at":          {
          "macro_type": "timestamp",
          "comment":    "Sent To ShieldNET"
        }
      }
    },
    "db_table_ip_rules":         {
      "name":            "IP Rules",
      "autoexpire":      0,
      "slug":            "ip_rules",
      "has_updated_at":  true,
      "col_older_than":  "updated_at",
      "cols_custom":     {
        "ip_ref":     {
          "macro_type":  "foreign_key_id",
          "foreign_key": {
            "ref_table": "icwp_wpsf_ips"
          }
        },
        "cidr":       {
          "macro_type": "unsigned_int",
          "length":     3,
          "comment":    "CIDR"
        },
        "is_range":   {
          "macro_type": "bool",
          "default":    0,
          "comment":    "Is IP Range"
        },
        "offenses":   {
          "macro_type": "unsigned_int",
          "length":     3,
          "comment":    "Offenses Count"
        },
        "type":       {
          "macro_type": "char",
          "length":     2,
          "comment":    "List"
        },
        "label":      {
          "macro_type": "varchar",
          "length":     255,
          "comment":    "IP Description"
        },
        "can_export": {
          "macro_type": "bool",
          "default":    0,
          "comment":    "Can This IP Be Exported"
        }
      },
      "cols_timestamps": {
        "last_access_at":          {
          "comment": "Last Access"
        },
        "blocked_at":              {
          "comment": "IP Blocked"
        },
        "unblocked_at":            {
          "comment": "Visitor Requested Unblock"
        },
        "last_unblock_attempt_at": {
          "comment": "Last Time An Auto-Unblock Attempt Was Made"
        },
        "expires_at":              {
          "comment": "The IP Rule on this lists expires at this time."
        },
        "imported_at":             {
          "comment": "This IP rule was imported from a master site."
        }
      },
      "indices":         [
        {
          "name":    "Last_Access_Index",
          "columns": [
            "last_access_at"
          ]
        }
      ]
    },
    "db_table_crowdsec_signals": {
      "name":            "CrowdSec Signals",
      "autoexpire":      0,
      "slug":            "crowdsec_signals",
      "has_updated_at":  false,
      "has_created_at":  true,
      "has_deleted_at":  false,
      "col_older_than":  "created_at",
      "cols_custom":     {
        "scenario": {
          "macro_type": "varchar",
          "length":     32,
          "attr":       []
        },
        "scope":    {
          "macro_type": "varchar",
          "length":     16,
          "attr":       []
        },
        "value":    {
          "macro_type": "varchar",
          "length":     256,
          "attr":       []
        }
      },
      "cols_timestamps": {
        "milli_at": {
          "comment": "Milliseconds"
        }
      }
    },
    "db_table_reports":          {
      "name":            "Security Reports",
      "autoexpire":      30,
      "slug":            "reports",
      "has_updated_at":  false,
      "has_deleted_at":  false,
      "col_older_than":  "created_at",
      "cols_custom":     {
        "type":            {
          "macro_type": "char",
          "length":     3,
          "comment":    "Report Type"
        },
        "interval_length": {
          "macro_type": "varchar",
          "length":     10,
          "comment":    "Report Interval"
        },
        "unique_id":       {
          "type":    "char",
          "length":  36,
          "attr":    [
            "UNIQUE",
            "NOT NULL"
          ],
          "comment": "Unique ID"
        },
        "title":           {
          "macro_type": "varchar",
          "length":     64,
          "comment":    "Report Title"
        },
        "content":         {
          "type":    "mediumblob",
          "comment": "Report Content"
        },
        "protected":       {
          "macro_type": "bool",
          "default":    0,
          "comment":    "Protected against deletion"
        }
      },
      "cols_timestamps": {
        "interval_start_at": {
          "comment": "Interval Start"
        },
        "interval_end_at":   {
          "comment": "Interval End"
        },
        "created_at":        {
          "comment": "Report Sent At"
        }
      }
    },
    "db_table_user_meta":        {
      "name":            "User Meta",
      "slug":            "user_meta",
      "autoexpire":      0,
      "has_updated_at":  true,
      "has_deleted_at":  false,
      "cols_custom":     {
        "user_id": {
          "macro_type": "unsigned_int",
          "type":       "bigint",
          "length":     11,
          "attr":       [
            "UNIQUE"
          ]
        },
        "ip_ref":  {
          "macro_type":  "foreign_key_id",
          "foreign_key": {
            "ref_table": "icwp_wpsf_ips"
          }
        }
      },
      "cols_timestamps": {
        "backupcode_ready_at":  {
          "comment": "Backup Code Ready"
        },
        "email_ready_at":       {
          "comment": "Email Ready"
        },
        "ga_ready_at":          {
          "comment": "Google Auth Ready"
        },
        "u2f_ready_at":         {
          "comment": "U2F Ready"
        },
        "yubi_ready_at":        {
          "comment": "Yubikey Ready"
        },
        "first_seen_at":        {
          "comment": "User First Seen"
        },
        "last_login_at":        {
          "comment": "Last Login At"
        },
        "last_2fa_verified_at": {
          "comment": "Last 2FA Verified"
        },
        "hard_suspended_at":    {
          "comment": "Hard Suspend"
        },
        "pass_started_at":      {
          "comment": "Password First Seen or Set"
        }
      }
    }
  }
}